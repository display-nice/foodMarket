{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,sBAAsB;AACtB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C,uCAAuC;AACvC;AACA,sBAAsB,mCAAmC;AACzD;AACA,SAAS;AACT,iCAAiC;AACjC;AACA;AACA;AACA,iDAAiD;AACjD,gCAAgC;AAChC,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mCAAmC;AACnC;AACA,8BAA8B;AAC9B,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,yBAAyB;AACzB;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,QAAQ;AACR;AACA,oDAAoD;AACpD,mCAAmC;AACnC;AACA,qDAAqD;AACrD,mDAAmD;AACnD,6EAA6E;AAC7E;AACA,mFAAmF;AACnF,oDAAoD;AACpD,kFAAkF;AAClF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,iDAAiD;AACjD,sDAAsD;AACtD;AACA,qCAAqC;AACrC,iEAAiE;AACjE,qBAAqB,OAAO;AAC5B;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+CAA+C;AAC/C,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,qDAAqD;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA,UAAU;AACV;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,UAAU;AACV,iDAAiD;AACjD;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA,gDAAgD;AAChD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCxBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,wBAAwB,mBAAO,CAAC,4DAAwB;AACxD,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://foodmarket/./js/modules/calc.js","webpack://foodmarket/./js/modules/forms.js","webpack://foodmarket/./js/modules/modal-callme.js","webpack://foodmarket/./js/modules/slider.js","webpack://foodmarket/./js/modules/tabs.js","webpack://foodmarket/./js/modules/timer.js","webpack://foodmarket/webpack/bootstrap","webpack://foodmarket/./js/script.js"],"sourcesContent":["function calc () {    \r\n    // ----------------------------- Калькулятор веса -------------------------------------------\r\n    let result = document.querySelector('.calculating__result span');\r\n    let sex = 'female', \r\n    height, weight, age, \r\n    ratio = '1.375';\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        sex = localStorage.getItem('ratio');\r\n    } else {\r\n        sex = '1.375';\r\n        localStorage.setItem('ratio', '1.375');\r\n    }\r\n\r\n    // проверяем локальное хранилище на предмет сохранённой ранее инфы\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') == localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = \"-----\";        \r\n            // console.log('чего-то не хватает');\r\n            // console.log(sex, height, weight, age, ratio); \r\n            return; // досрочный выход из функции\r\n        }\r\n        if (sex == \"female\") {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1* height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n    calcTotal();\r\n\r\n    function getStaticInformation(parentSelector, activeClass) { \r\n        const elements = document.querySelectorAll(parentSelector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }    \r\n                elements.forEach(element => {\r\n                    element.classList.remove(activeClass);\r\n                });\r\n        \r\n                e.target.classList.add(activeClass);\r\n        \r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getConstitutionInfo(selector) {\r\n        const input = document.querySelector(selector);\r\n        input.addEventListener('input', () => {\r\n            if (input.value.match(/\\D/g) ) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch(input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calcTotal();\r\n        });\r\n    }\r\n    getConstitutionInfo('#height');\r\n    getConstitutionInfo('#weight');\r\n    getConstitutionInfo('#age');\r\n}\r\n\r\nmodule.exports = calc;","function forms () {\r\n    // ----------------------------Отправка формы на сервер ---------------------------------------\r\n    // сбросить кэш на винде: shift+f5\r\n\r\n    const forms = document.querySelectorAll('form'); // Берём все формы\r\n    const message = { // Создаём объект-хранилище текстов сообщений\r\n        loading: \"Загрузка\",\r\n        success: \"Спасибо! Мы с вами свяжемся \",\r\n        failure: \"Произошла ошибка\"\r\n    };\r\n    forms.forEach(item => { // навешиваем на каждую форму функцию bindPostData\r\n        bindPostData(item);\r\n    });\r\n\r\n    // функция с настройками, асинхронное ожидание\r\n    const postData = async (url, data) => { // async означает, что внутри функции будет асинхронный код\r\n        const res = await fetch(url, { // await говорит, что мы сначала ждём выполнения фетча, потом присваиваем значение переменной\r\n            method: \"POST\", // это стандартный объект с настройками для фетча\r\n            headers: {'Content-type': 'application/json'},\r\n            body: data\r\n        });\r\n        return await res.json(); // ждём трансформации ответа в джсон и возвращаем\r\n    };\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => { // Добавляем на форму обработчик событий (событие - отправка формы)\r\n            e.preventDefault(); // Предотвращаем стандартное действие формы\r\n            const formData = new FormData(form); // Собираем данные из формы в один объект для последующей отправки объекта в запросе;\r\n            \r\n            //берём formData, превращ. в массив массивов, кот. превращ. в объект, кот. превращ. в джсон.\r\n            const json = JSON.stringify( Object.fromEntries(formData.entries()) );\r\n\r\n            // альтернативный вариант преобразования в объект\r\n            // const object = {};\r\n            // formData.forEach(function(value, key) {\r\n            //     object[key] = value;\r\n            // });\r\n\r\n            postData('http://localhost:3000/requests', json ) // вызов функции с настройками, указание ей юрл и тела\r\n            .then(data => {\r\n                console.log(data); // выводим в консоль ответ на запрос\r\n                showThanksModal(message.success);\r\n                form.reset(); // после успешной отправки форма сбрасывается \r\n            })\r\n            .catch(() => {\r\n                showThanksModal(message.failure);\r\n            })\r\n            .finally(() => {\r\n                form.reset();\r\n            });\r\n        });    \r\n    }\r\n\r\n    // Ниже в закомментированном виде просто для информации приведено тоже самое, но в варианте, реализованном через XMLHTTPRequest и для данных\r\n    // которые приходят в json-формате. Если нужны данные в виде объекта, то см. комментарии по замене строк, комменты\r\n    // начинаются с \"ДЛЯ ОБЪЕКТА:\"\r\n    // const forms = document.querySelectorAll('form'); // Берём все формы\r\n    // const message = { // Создаём объект-хранилище текстов сообщений\r\n    //     loading: \"Загрузка\",\r\n    //     success: \"Спасибо! Мы с вами свяжемся \",\r\n    //     failure: \"Произошла ошибка\"\r\n    // };\r\n    // forms.forEach(item => { // навешиваем на каждую форму функцию PostData\r\n    //     PostData(item);\r\n    // });\r\n    // function PostData(form) {\r\n    //     form.addEventListener('submit', (e) => { // Добавляем на форму обработчик событий (событие - отправка формы)\r\n    //         e.preventDefault(); // Предотвращаем стандартное действие формы\r\n    //         // 1. Сам запрос\r\n    //         const request = new XMLHttpRequest(); // Записываем запрос в переменную\\константу\r\n    //         request.open('POST', 'server.php'); // Указываем параметры запроса\r\n    //         request.setRequestHeader('Content-type', 'application/json'); // Заголовок запроса для JSON        \r\n    //         // ДЛЯ ОБЪЕКТА: заголовок, если у нас объект, указывать не нужно, а то работать не будет!\r\n    //         // request.setRequestHeader('Content-type', 'multipart/form-data'); - пусть будет тут на всякий случай;\r\n    //         const formData = new FormData(form); //Собираем данные из формы в один объект для последующей отправки объекта в запросе:\r\n    //         // Ниже блок кода с допнастройкой для отправки данных в виде JSON; Если не нужен - удалить!\r\n    //         // php по умолчанию не работает с JSON, нужно их декодировать на сервере (смотри server.php)\r\n    //         const object = {};\r\n    //         formData.forEach(function(value, key) {\r\n    //             object[key] = value;\r\n    //         });\r\n    //         const json = JSON.stringify(object);\r\n    //         request.send(json);\r\n    //         // ДЛЯ ОБЪЕКТА: request.send(formData);\r\n\r\n    //         // сам запрос\r\n    //         request.addEventListener('load', () => { //Отслеживаем статус запроса\r\n    //             if (request.status === 200) { // если приходит успешный статус 200, рапортуем об успехе\r\n    //                 console.log(request.response); // выводим в консоль ответ на запрос\r\n    //                 showThanksModal(message.success);\r\n    //                 form.reset(); // после успешной отправки форма сбрасывается                \r\n    //                 // statusMessage.remove();                - можно удалить, не используется \r\n    //             } else { // если другой статус, кроме 200, рапортуем об ошибке\r\n    //                 showThanksModal(message.failure);\r\n    //             }\r\n    //         });\r\n    //     });    \r\n    // }\r\n\r\n    // После отправки разговариваем с пользователем - показываем модальное окно\r\n    function showThanksModal (message) {\r\n        let defaultModalDialog = document.querySelector('.modal__dialog');\r\n        defaultModalDialog.hidden = true;\r\n        openCallbackScreen();\r\n\r\n        let thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div data-close class=\"modal__close\">×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n        document.querySelector('.modal').append(thanksModal);\r\n\r\n        // функция закрытия окна с отчётом об отправке\r\n        function closeThanksModal() {\r\n            thanksModal.remove(); //удаляем окно\r\n            defaultModalDialog.hidden = false; //восстанавливаем видимость\r\n            closeCallbackScreen(); // закрываем окно \"перезвонить нам\"\r\n        }\r\n\r\n        // по нажатию на крестик вызываем функцию и удаляем окно\r\n        thanksModal.onclick = function() { \r\n            closeThanksModal();\r\n        };\r\n\r\n        // окно также самоликвидируется через 4 секунды\r\n        setTimeout( () => {\r\n            closeThanksModal();\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nmodule.exports = forms;","function modalCallme() {\r\n    // ----------------------------ОТКРЫТИЕ И ЗАКРЫТИЕ ОКНА \"ПЕРЕЗВОНИТЕ МНЕ\"--------------------------------\r\n    const callbackButtons = document.querySelectorAll('[data-modal]');\r\n    const callbackWindowX = document.querySelector('.modal__close');\r\n    const callbackScreen = document.querySelector('.modal');\r\n\r\n    // функция открытия окна\r\n    const openCallbackScreen = function () {\r\n        callbackScreen.style.cssText = \"display: block\";\r\n        // останавливаем прокрутку страницы при показе окна\r\n        document.body.style.overflow = \"hidden\"; \r\n        // если пользак открыл окно сам, то останавливаем таймер, чтобы онко ему больше не показывалось\r\n        clearInterval(callbackTimerID); \r\n    };\r\n\r\n    // функция закрытия окна\r\n    const closeCallbackScreen = function () {\r\n        callbackScreen.style.cssText = \"display: none\";\r\n        document.body.style.overflow = \"\"; // возвращаем прокрутку страницы при скрытии окна\r\n    };\r\n\r\n    // навешиваем открытие окна \"перезвоните мне\" на каждую соответствующую кнопку\r\n    callbackButtons.forEach( button => {\r\n        button.addEventListener('click', openCallbackScreen);\r\n    });\r\n\r\n    // при клике закрываем окно\r\n    callbackScreen.addEventListener('click', (event) => {    \r\n        if (event.target === callbackScreen) {\r\n            closeCallbackScreen(); // закрываем по нажатию на пустое место за пределами окна\r\n        }\r\n        else if (event.target === callbackWindowX) { // закрываем по нажатию на крестик\r\n            closeCallbackScreen();\r\n        }\r\n    });\r\n\r\n    // при нажатии эскейп закрываем окно\r\n    document.addEventListener('keydown', (event) => {\r\n        if (event.code === \"Escape\" && callbackScreen.style.cssText == \"display: block;\") {\r\n            closeCallbackScreen();\r\n        }\r\n    });\r\n\r\n    // модальное окно откроется через секунд после открытия страницы\r\n    let callbackTimerID = setTimeout(openCallbackScreen, 50000);\r\n\r\n    // открываем окно при прокрутке до конца страницы\r\n    const openCallbackScreenByScroll = function () {\r\n        //Если прокрученная часть (window.pageYOffset) + видимая часть >= всей высоте сайта, значит пользак долистал до конца страницы;\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openCallbackScreen();\r\n            // делаем открытие окна однократным;\r\n            window.removeEventListener('scroll', openCallbackScreenByScroll);\r\n        }\r\n    };\r\n    window.addEventListener('scroll', openCallbackScreenByScroll);\r\n}\r\n\r\nmodule.exports = modalCallme;","function slider () {\r\n    // ----------------------------- Слайдер -------------------------------------------\r\n    // Вариант слайдера №2, посложнее\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n        slider = document.querySelector('.offer__slider'),\r\n        prev = document.querySelector('.offer__slider-prev'),\r\n        next = document.querySelector('.offer__slider-next'),\r\n        total = document.querySelector('#total'),\r\n        current = document.querySelector('#current'),\r\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n        slidesField = document.querySelector('.offer__slider-inner'),\r\n        width = window.getComputedStyle(slidesWrapper).width; // получает ширину из вычисленных цсс-стилей\r\n\r\n    let slideIndex = 1;\r\n    let offset = 0; // Счётчик отступа влево или вправо\r\n\r\n    // // проверка на количество слайдов, надо ли добавлять нолик для отображения перед номером слайда\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    // ширина карусели должна быть в процентах и равна кол-ву слайдов умнож. на 100%\r\n    slidesField.style.width = slides.length * 100 + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n    slidesWrapper.style.overflow ='hidden';\r\n\r\n    // устанавливаем ширину для каждого слайда = вычисленной ширине из цсс-стилей\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n    const indicators = document.createElement('ol'),\r\n        dots = [];\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n    slider.append(indicators);\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.classList.add('dot');\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        // width.slice(0, width.length -2) означает что мы вырезаем из строки только число, а \"px\" в конце отбрасываем\r\n        if (offset == +width.replace(/\\D/g, '') * (slides.length - 1)) { // ширина хранится в виде строки. переделываем в число.\r\n            offset = 0;\r\n        } else {\r\n            offset += +width.replace(/\\D/g, '');\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity ='0.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        // width.slice(0, width.length -2) означает что мы вырезаем из строки только число, а \"px\" в конце отбрасываем\r\n        if (offset == 0) { // ширина хранится в виде строки. переделываем в число.\r\n            offset = +width.replace(/\\D/g, '') * (slides.length - 1);\r\n        } else {\r\n            offset -= +width.replace(/\\D/g, ''); // вычитаем ширину слайда\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n        dots.forEach(dot => dot.style.opacity ='0.5'); \r\n        dots[slideIndex - 1].style.opacity = 1; // устанавливаем яркость для активной точки\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n            slideIndex = slideTo;\r\n            offset = +width.slice(0, width.length -2) * (slideTo - 1);\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n            dots.forEach(dot => dot.style.opacity ='0.5');\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n        });\r\n    });\r\n\r\n    // Вариант слайдера №1, самый простой\r\n    // используется такой хтмл:\r\n    // <div class=\"offer__slider-wrapper\">\r\n    //     <div class=\"offer__slide\">\r\n    //         <img src=\"img/slider/pepper.jpg\" alt=\"pepper\">\r\n    //     </div>\r\n    //     <div class=\"offer__slide\">\r\n    //         <img src=\"img/slider/food-12.jpg\" alt=\"food\">\r\n    //     </div>\r\n    //     <div class=\"offer__slide\">\r\n    //         <img src=\"img/slider/olive-oil.jpg\" alt=\"oil\">\r\n    //     </div>\r\n    //     <div class=\"offer__slide\">\r\n    //         <img src=\"img/slider/paprika.jpg\" alt=\"paprika\">\r\n    //     </div>\r\n    // </div>\r\n\r\n    // const slides = document.querySelectorAll('.offer__slide');\r\n    // const prev = document.querySelector('.offer__slider-prev');\r\n    // const next = document.querySelector('.offer__slider-next');\r\n    // const total = document.querySelector('#total');\r\n    // const current = document.querySelector('#current');\r\n    // let slideIndex = 1;\r\n\r\n    // showSlides(1); // первичный запуск функции для установки первого слайда\r\n\r\n    // // проверка на количество слайдов, надо ли добавлять нолик для отображения перед номером слайда\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n\r\n    // function showSlides(n) {\r\n    //     // установка индекса слайдов при выходе за допустимые границы\r\n    //     if (n > slides.length) {\r\n    //         slideIndex = 1;\r\n    //     }\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n    //     // отображение слайдов. сначала все скрываем, затем показываем нужный.\r\n    //     slides.forEach(slide => slide.style.display = 'none');\r\n    //     slides[slideIndex - 1].style.display = 'block';\r\n    //     // показывает номер текущего слайда\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n    // }\r\n\r\n    // function plusSlides(n) {\r\n    //     showSlides(slideIndex += 1);\r\n    // }\r\n\r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlides(-1);\r\n    // });\r\n    // next.addEventListener('click', () => {\r\n    //     plusSlides(1);\r\n    // });\r\n}\r\n\r\nmodule.exports = slider;\r\n","// ----------------------------ТАБЫ СО СТИЛЯМИ ПИТАНИЯ ---------------------------------------\r\nfunction tabs () {\r\n    let tabHeaderParent = document.querySelector('.tabheader__items');\r\n    let tabs = document.querySelectorAll('.tabheader__item');\r\n    let tabsContent = document.querySelectorAll('.tabcontent');\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.style.cssText = \"display: none\";\r\n        });\r\n        tabs.forEach(item => {\r\n            item.classList.remove('tabheader__item_active');\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].style.cssText = \"display: block\";\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabHeaderParent.addEventListener('click', (event) => {\r\n        if (event.target && event.target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => {\r\n                if (event.target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = tabs;","function timer () {\r\n    // -------------------------------ТАЙМЕР ОБРАТНОГО ОТСЧЁТА ВРЕМЕНИ АКЦИИ-----------------------------------\r\n    let daysLeft = document.querySelector('#days'),\r\n        hoursLeft = document.querySelector('#hours'),\r\n        minutesLeft = document.querySelector('#minutes'),\r\n        secondsLeft = document.querySelector('#seconds');\r\n    const endTime = '2022-06-27';\r\n\r\n    function calculateTime(endTime) {\r\n        let x = Date.parse(endTime) - new Date();\r\n        // когда временные штампы сравняются, то таймер отключится\r\n        if (x == 0) {\r\n            clearInterval(promoCountdown);\r\n        }\r\n        daysLeft.textContent = Math.floor( x / 86400000 );\r\n        hoursLeft.textContent = Math.floor( (x / 3600000 ) % 24);\r\n        minutesLeft.textContent = Math.floor( (x / 60000 ) % 60 );    \r\n        secondsLeft.textContent = Math.floor( (x / 1000 ) % 60 );\r\n        \r\n    }\r\n    // запуск функции расчёта каждую секунду\r\n    const promoCountdown = setInterval(calculateTime, 1000, endTime);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', () => {\r\n    const tabs = require('./modules/tabs'),\r\n          modalCallme = require('./modules/modal-callme'),\r\n          calc = require('./modules/calc'),\r\n          cards = require('./modules/forms'),\r\n          slider = require('./modules/slider'),\r\n          timer = require('./modules/timer'),\r\n          forms = require('./modules/forms');   \r\n    tabs();\r\n    modalCallme();\r\n    calc();\r\n    cards();\r\n    slider();\r\n    timer();\r\n    forms(); \r\n});"],"names":[],"sourceRoot":""}